name: Docker Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # Instalar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        if: success()
        with:
          node-version: 20

      # Instalar dependencias
      - name: Install dependencies
        if: success()
        run: npm install

      # Construir la aplicación Angular
      - name: Build Angular app
        if: success()
        run: npm run build -- --configuration production

      # Configurar Docker Hub para autenticar
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        if: success()
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Construir la imagen de Docker
      - name: Build Docker image
        if: success()
        run: docker build -t mariafernanda2798/classqr-front-app:latest .

      # Subir la imagen a Docker Hub
      - name: Push Docker image
        if: success()
        run: docker push mariafernanda2798/classqr-front-app:latest

  deploy:
    if: success()
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Configurar Azure para autenticar
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Desplegar el contenedor en Azure App Service
      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        if: success()
        with:
          app-name: "classqr-front-app"
          images: "mariafernanda2798/classqr-front-app:latest"
